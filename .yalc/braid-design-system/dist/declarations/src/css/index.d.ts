import type { Atoms } from '../css/atoms/atoms';
import { responsiveStyle } from '../css/responsiveStyle';
import { breakpoints } from '../css/breakpoints';
import { globalHeadingStyle, globalTextStyle } from '../hooks/typography';
import type { Breakpoint } from '../css/breakpoints';
declare const vars: {
    grid: import("@vanilla-extract/private").CSSVarFunction;
    space: import("@vanilla-extract/private").MapLeafNodes<{
        gutter: string;
        xxsmall: string;
        xsmall: string;
        small: string;
        medium: string;
        large: string;
        xlarge: string;
        xxlarge: string;
    }, import("@vanilla-extract/private").CSSVarFunction>;
    touchableSize: import("@vanilla-extract/private").CSSVarFunction;
    backgroundColor: import("@vanilla-extract/private").MapLeafNodes<{
        body: string;
        brand: string;
        brandAccent: string;
        brandAccentActive: string;
        brandAccentHover: string;
        brandAccentSoft: string;
        brandAccentSoftActive: string;
        brandAccentSoftHover: string;
        card: string;
        caution: string;
        cautionLight: string;
        critical: string;
        criticalActive: string;
        criticalHover: string;
        criticalLight: string;
        criticalSoft: string;
        criticalSoftActive: string;
        criticalSoftHover: string;
        formAccent: string;
        formAccentActive: string;
        formAccentDisabled: string;
        formAccentHover: string;
        formAccentSoft: string;
        formAccentSoftActive: string;
        formAccentSoftHover: string;
        info: string;
        infoLight: string;
        input: string;
        inputDisabled: string;
        neutral: string;
        neutralLight: string;
        positive: string;
        positiveLight: string;
        promote: string;
        promoteLight: string;
        selection: string;
    }, import("@vanilla-extract/private").CSSVarFunction>;
    foregroundColor: import("@vanilla-extract/private").MapLeafNodes<{
        brandAccent: string;
        caution: string;
        critical: string;
        formAccent: string;
        info: string;
        link: string;
        linkHover: string;
        linkVisited: string;
        neutral: string;
        neutralInverted: string;
        positive: string;
        promote: string;
        rating: string;
        secondary: string;
        secondaryInverted: string;
    }, import("@vanilla-extract/private").CSSVarFunction>;
    textWeight: import("@vanilla-extract/private").MapLeafNodes<{
        strong: string;
        medium: string;
        regular: string;
    }, import("@vanilla-extract/private").CSSVarFunction>;
    borderColor: import("@vanilla-extract/private").MapLeafNodes<{
        brandAccent: string;
        caution: string;
        cautionLight: string;
        critical: string;
        criticalLight: string;
        field: string;
        focus: string;
        formAccent: string;
        formHover: string;
        info: string;
        infoLight: string;
        positive: string;
        positiveLight: string;
        promote: string;
        promoteLight: string;
        standard: string;
        standardInverted: string;
    }, import("@vanilla-extract/private").CSSVarFunction>;
    borderRadius: import("@vanilla-extract/private").MapLeafNodes<{
        standard: string;
        large: string;
        xlarge: string;
    }, import("@vanilla-extract/private").CSSVarFunction>;
    borderWidth: import("@vanilla-extract/private").MapLeafNodes<{
        standard: string;
        large: string;
    }, import("@vanilla-extract/private").CSSVarFunction>;
};
declare function atoms(props: Omit<Atoms, 'background'>): string;
export { vars, atoms, breakpoints, responsiveStyle, globalTextStyle, globalHeadingStyle, };
export type { Breakpoint };
