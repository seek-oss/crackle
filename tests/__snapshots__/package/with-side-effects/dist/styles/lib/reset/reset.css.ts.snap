/* #region dist/styles/lib/reset/reset.css.cjs */
"use strict";
const fileScope = require("@vanilla-extract/css/fileScope");
const css = require("@vanilla-extract/css");
fileScope.setFileScope("src/lib/reset/reset.css.ts", "@crackle-fixtures/with-side-effects");
const hideFocusRingsDataAttribute = "data-braid-hidefocusrings";
const base = css.style({
  margin: 0,
  padding: 0,
  border: 0,
  boxSizing: "border-box",
  fontSize: "100%",
  font: "inherit",
  verticalAlign: "baseline",
  WebkitTapHighlightColor: "transparent",
  selectors: {
    [`[${hideFocusRingsDataAttribute}] &`]: {
      outline: "none"
    }
  }
}, "base");
const block = css.style({
  display: "block"
}, "block");
const element = {
  section: block
};
fileScope.endFileScope();
exports.base = base;
exports.element = element;
/* #endregion */


/* #region dist/styles/lib/reset/reset.css.mjs */
import { setFileScope, endFileScope } from "@vanilla-extract/css/fileScope";
import { style } from "@vanilla-extract/css";
setFileScope("src/lib/reset/reset.css.ts", "@crackle-fixtures/with-side-effects");
const hideFocusRingsDataAttribute = "data-braid-hidefocusrings";
const base = style({
  margin: 0,
  padding: 0,
  border: 0,
  boxSizing: "border-box",
  fontSize: "100%",
  font: "inherit",
  verticalAlign: "baseline",
  WebkitTapHighlightColor: "transparent",
  selectors: {
    [`[${hideFocusRingsDataAttribute}] &`]: {
      outline: "none"
    }
  }
}, "base");
const block = style({
  display: "block"
}, "block");
const element = {
  section: block
};
endFileScope();
export {
  base,
  element
};
/* #endregion */
