/* #region dist/index.cjs */
"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const JobSummary = require("./JobSummary.chunk.cjs");
const add = (a, b) => a + b;
exports.JobSummary = JobSummary.JobSummary;
exports.add = add;
/* #endregion */


/* #region dist/index.d.mts */
import * as react_jsx_runtime from 'react/jsx-runtime';

interface JobSummaryProps {
    title: string;
    isNew: boolean;
}
declare const JobSummary: ({ title, isNew }: JobSummaryProps) => react_jsx_runtime.JSX.Element;

declare const add: (a: number, b: number) => number;

type DevDepType = 'string';

type MathsFn = (a: number, b: number) => number;

declare const logger: (...args: any[]) => void;
declare const calcAndLog: (a: number, b: number, fn: MathsFn) => void;

declare const _default: "I am theme";

export { JobSummary, _default, add, calcAndLog, logger };
export type { DevDepType };
/* #endregion */


/* #region dist/index.d.ts */
import * as react_jsx_runtime from 'react/jsx-runtime';

interface JobSummaryProps {
    title: string;
    isNew: boolean;
}
declare const JobSummary: ({ title, isNew }: JobSummaryProps) => react_jsx_runtime.JSX.Element;

declare const add: (a: number, b: number) => number;

type DevDepType = 'string';

type MathsFn = (a: number, b: number) => number;

declare const logger: (...args: any[]) => void;
declare const calcAndLog: (a: number, b: number, fn: MathsFn) => void;

declare const _default: "I am theme";

export { JobSummary, _default, add, calcAndLog, logger };
export type { DevDepType };
/* #endregion */


/* #region dist/index.mjs */
import { JobSummary } from "./JobSummary.chunk.mjs";
const add = (a, b) => a + b;
export {
  JobSummary,
  add
};
/* #endregion */
