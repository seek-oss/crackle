// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`babel-plugin-remove-exports > 1. Braid import > 1. Braid import 1`] = `
import { createRouteData } from "@crackle/router";
import { Card, Stack } from "braid-design-system";
import React from "react";

import { routeSetterUpper, unusedFunctions } from "./internalRoutingLogic";

import { Something } from "../Somewhere";

export const routeData = createRouteData<BraidMetadata>(() => {
  const myRoute = "/details";
  return {
    route: myRoute,
    someDetail: routeSetterUpper(),
    globalMetadata: {
      isDeprecated: true,
      componentName: "Details",
    },
  };
});

export default function () {
  return (
    <Card>
      <Stack space="medium">
        <Something />
        <Something />
      </Stack>
    </Card>
  );
}
    

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from "@crackle/router";
import { routeSetterUpper, unusedFunctions } from "./internalRoutingLogic";
export const routeData = createRouteData<BraidMetadata>(() => {
  const myRoute = "/details";
  return {
    route: myRoute,
    someDetail: routeSetterUpper(),
    globalMetadata: {
      isDeprecated: true,
      componentName: "Details"
    }
  };
});
`;

exports[`babel-plugin-remove-exports > 2. Keep default export, Local variable used in an imported function > 2. Keep default export, Local variable used in an imported function 1`] = `
import { createRouteData } from "@crackle/router";
import React from "react";

import { routeSetupFunc } from "./settyThing";

const componentDetails = "siteEn";

const routeData = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: {
    detailsKey: routeSetupFunc(componentDetails),
    isDeprecated: true,
    componentName: "Details",
  },
}));

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}

export { routeData };
    

      ↓ ↓ ↓ ↓ ↓ ↓

import React from "react";
const MyComponent = () => <div />;
export default function () {
  return <MyComponent />;
}
`;

exports[`babel-plugin-remove-exports > 3. Local variable used in an imported function > 3. Local variable used in an imported function 1`] = `
import { createRouteData } from "@crackle/router";
import React from "react";

import { routeSetupFunc } from "./settyThing";

const componentDetails = "siteEn";

const routeData = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: {
    detailsKey: routeSetupFunc(componentDetails),
    isDeprecated: true,
    componentName: "Details",
  },
}));

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}

export { routeData };
    

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from "@crackle/router";
import { routeSetupFunc } from "./settyThing";
const componentDetails = "siteEn";
const routeData = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: {
    detailsKey: routeSetupFunc(componentDetails),
    isDeprecated: true,
    componentName: "Details"
  }
}));
export { routeData };
`;

exports[`babel-plugin-remove-exports > 4. Nested object > 4. Nested object 1`] = `
import { createRouteData } from "@crackle/router";
import React from "react";

const componentName = "Details";

const myMetadata = {
  isDeprecated: true,
  componentName,
};

export const routeData = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: myMetadata,
}));

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}
    

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from "@crackle/router";
const componentName = "Details";
const myMetadata = {
  isDeprecated: true,
  componentName
};
export const routeData = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: myMetadata
}));
`;

exports[`babel-plugin-remove-exports > 5. Renamed export > 5. Renamed export 1`] = `
import { createRouteData } from "@crackle/router";
import React from "react";

const routes = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: {
    isDeprecated: true,
    componentName: "Details",
  },
}));

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}

export { routes as routeData };
    

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from "@crackle/router";
const routes = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: {
    isDeprecated: true,
    componentName: "Details"
  }
}));
export { routes as routeData };
`;

exports[`babel-plugin-remove-exports > 6. Separated named export > 6. Separated named export 1`] = `
import { createRouteData } from "@crackle/router";
import React from "react";

const routeData = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: {
    isDeprecated: true,
    componentName: "Details",
  },
}));

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}

export { routeData };
    

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from "@crackle/router";
const routeData = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: {
    isDeprecated: true,
    componentName: "Details"
  }
}));
export { routeData };
`;

exports[`babel-plugin-remove-exports > 7. Super nested object > 7. Super nested object 1`] = `
import { createRouteData } from "@crackle/router";
import React from "react";

const componentName = "Details";

const myMetadata = {
  isDeprecated: true,
  componentName,
};

const routeDetails = {
  route: "/details",
  globalMetadata: myMetadata,
};

export const routeData = createRouteData<BraidMetadata>(() => routeDetails);

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}
    

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from "@crackle/router";
const componentName = "Details";
const myMetadata = {
  isDeprecated: true,
  componentName
};
const routeDetails = {
  route: "/details",
  globalMetadata: myMetadata
};
export const routeData = createRouteData<BraidMetadata>(() => routeDetails);
`;

exports[`babel-plugin-remove-exports > 8. Used import > 8. Used import 1`] = `
import { createRouteData } from "@crackle/router";
import React from "react";

import { routeSetterUpper, unusedFunctions } from "./internalRoutingLogic";

import { Something } from "../Somewhere";

export const routeData = createRouteData<BraidMetadata>(() => {
  const myRoute = "/details";
  return {
    route: myRoute,
    someDetail: routeSetterUpper(),
    globalMetadata: {
      isDeprecated: true,
      componentName: "Details",
    },
  };
});

export default function () {
  return <Something />;
}
    

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from "@crackle/router";
import { routeSetterUpper, unusedFunctions } from "./internalRoutingLogic";
export const routeData = createRouteData<BraidMetadata>(() => {
  const myRoute = "/details";
  return {
    route: myRoute,
    someDetail: routeSetterUpper(),
    globalMetadata: {
      isDeprecated: true,
      componentName: "Details"
    }
  };
});
`;

exports[`babel-plugin-remove-exports > 9. Used object > 9. Used object 1`] = `
import { createRouteData } from "@crackle/router";
import React from "react";

const myMetadata = {
  isDeprecated: true,
  componentName: "Details",
};

export const routeData = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: myMetadata,
}));

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}
    

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from "@crackle/router";
const myMetadata = {
  isDeprecated: true,
  componentName: "Details"
};
export const routeData = createRouteData<BraidMetadata>(() => ({
  route: "/details",
  globalMetadata: myMetadata
}));
`;
