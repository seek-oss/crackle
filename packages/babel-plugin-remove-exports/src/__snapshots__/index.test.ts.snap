// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel-plugin-remove-exports Braid import: Braid import 1`] = `
"
import { createRouteData } from '@crackle/router';
import { Card, Stack } from 'braid-design-system';
import React from 'react';

import { routeSetterUpper, unusedFunctions } from './internalRoutingLogic';

import { Something } from '../Somewhere';

export const routeData = createRouteData<BraidMetadata>(() => {
  const myRoute = '/details';
  return {
    route: myRoute,
    someDetail: routeSetterUpper(),
    globalMetadata: {
      isDeprecated: true,
      componentName: 'Details',
    },
  }
});

export default function () {
  return (
    <Card>
      <Stack space=\\"medium\\">
        <Something />
        <Something />
      </Stack>
    </Card>
  )
}

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from '@crackle/router';
import { routeSetterUpper, unusedFunctions } from './internalRoutingLogic';
export const routeData = createRouteData<BraidMetadata>(() => {
  const myRoute = '/details';
  return {
    route: myRoute,
    someDetail: routeSetterUpper(),
    globalMetadata: {
      isDeprecated: true,
      componentName: 'Details'
    }
  };
});
"
`;

exports[`babel-plugin-remove-exports Local variable used in an imported function: Local variable used in an imported function 1`] = `
"
import { createRouteData } from '@crackle/router';
import React from 'react';

import { routeSetupFunc } from './settyThing';

const componentDetails = 'siteEn';

const routeData = createRouteData<BraidMetadata>(() => ({
  route: '/details',
  globalMetadata: {
    detailsKey: routeSetupFunc(componentDetails),
    isDeprecated: true,
    componentName: 'Details',
  },
}));

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}

export { routeData };

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from '@crackle/router';
import { routeSetupFunc } from './settyThing';
const componentDetails = 'siteEn';
const routeData = createRouteData<BraidMetadata>(() => ({
  route: '/details',
  globalMetadata: {
    detailsKey: routeSetupFunc(componentDetails),
    isDeprecated: true,
    componentName: 'Details'
  }
}));
export { routeData };
"
`;

exports[`babel-plugin-remove-exports Nested object: Nested object 1`] = `
"
import { createRouteData } from '@crackle/router';
import React from 'react';

const componentName = 'Details';

const myMetadata = {
  isDeprecated: true,
  componentName,
};

export const routeData = createRouteData<BraidMetadata>(() => ({
  route: '/details',
  globalMetadata: myMetadata,
}));

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from '@crackle/router';
const componentName = 'Details';
const myMetadata = {
  isDeprecated: true,
  componentName
};
export const routeData = createRouteData<BraidMetadata>(() => ({
  route: '/details',
  globalMetadata: myMetadata
}));
"
`;

exports[`babel-plugin-remove-exports Separated named export: Separated named export 1`] = `
"
import { createRouteData } from '@crackle/router';
import React from 'react';

const routeData = createRouteData<BraidMetadata>(() => ({
  route: '/details',
  globalMetadata: {
    isDeprecated: true,
    componentName: 'Details',
  },
}));

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}

export { routeData };

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from '@crackle/router';
const routeData = createRouteData<BraidMetadata>(() => ({
  route: '/details',
  globalMetadata: {
    isDeprecated: true,
    componentName: 'Details'
  }
}));
export { routeData };
"
`;

exports[`babel-plugin-remove-exports Super nested object: Super nested object 1`] = `
"
import { createRouteData } from '@crackle/router';
import React from 'react';

const componentName = 'Details';

const myMetadata = {
  isDeprecated: true,
  componentName,
};

const routeDetails = {
  route: '/details',
  globalMetadata: myMetadata,
}

export const routeData = createRouteData<BraidMetadata>(() => routeDetails);

const MyComponent = () => <div />;

export default function () {
  return <MyComponent />;
}

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from '@crackle/router';
const componentName = 'Details';
const myMetadata = {
  isDeprecated: true,
  componentName
};
const routeDetails = {
  route: '/details',
  globalMetadata: myMetadata
};
export const routeData = createRouteData<BraidMetadata>(() => routeDetails);
"
`;

exports[`babel-plugin-remove-exports Used import: Used import 1`] = `
"
import { createRouteData } from '@crackle/router';
import React from 'react';

import { routeSetterUpper, unusedFunctions } from './internalRoutingLogic';

import { Something } from '../Somewhere';

export const routeData = createRouteData<BraidMetadata>(() => {
  const myRoute = '/details';
  return {
    route: myRoute,
    someDetail: routeSetterUpper(),
    globalMetadata: {
      isDeprecated: true,
      componentName: 'Details',
    },
  }
});

export default function () {
  return <Something />;
}

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from '@crackle/router';
import { routeSetterUpper, unusedFunctions } from './internalRoutingLogic';
export const routeData = createRouteData<BraidMetadata>(() => {
  const myRoute = '/details';
  return {
    route: myRoute,
    someDetail: routeSetterUpper(),
    globalMetadata: {
      isDeprecated: true,
      componentName: 'Details'
    }
  };
});
"
`;

exports[`babel-plugin-remove-exports Used object: Used object 1`] = `
"
import { createRouteData } from '@crackle/router';
import React from 'react';

const myMetadata = {
  isDeprecated: true,
  componentName: 'Details',
}

export const routeData = createRouteData<BraidMetadata>(() => ({
  route: '/details',
  globalMetadata: myMetadata,
}));

const MyComponent = () => <div />

export default function () {
  return <MyComponent />;
}

      ↓ ↓ ↓ ↓ ↓ ↓

import { createRouteData } from '@crackle/router';
const myMetadata = {
  isDeprecated: true,
  componentName: 'Details'
};
export const routeData = createRouteData<BraidMetadata>(() => ({
  route: '/details',
  globalMetadata: myMetadata
}));
"
`;
